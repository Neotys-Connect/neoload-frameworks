<?xml version="1.1" encoding="UTF-8" ?>
<!DOCTYPE framework [
	<!ELEMENT framework ((dynamic-parameters?), (request-definition*),(simplified-VU-class?))>
	<!ELEMENT dynamic-parameters (dynamic-parameter+)>
	<!ELEMENT dynamic-parameter (dp-request-injector*)>
	<!ELEMENT dp-request-injector (#PCDATA)>
	<!ELEMENT request-definition (detection-rules, merge-request-rules?, message-definition*, result-handler?)>
	<!ELEMENT detection-rules (rule)>
	<!ELEMENT merge-request-rules (rule)>
	<!ELEMENT result-handler (timestamp-extractor?)>
	<!ELEMENT timestamp-extractor (#PCDATA)>
	<!ELEMENT message-definition ((conditions?), (name-extractor?))>
	<!ELEMENT conditions (condition*)>
	<!ELEMENT condition (#PCDATA)>
	<!ELEMENT name-extractor (#PCDATA)>
	<!ELEMENT simplified-VU-class (#PCDATA)>
	<!ELEMENT rule (rule*)>
	
	<!ATTLIST framework
		name CDATA #REQUIRED
		type CDATA #IMPLIED
		isReadOnly CDATA #IMPLIED
		version CDATA #REQUIRED
		licenseID CDATA #IMPLIED
		state CDATA #REQUIRED 
		group-consecutive-push-requests CDATA #IMPLIED>

	<!ATTLIST dynamic-parameter
		name CDATA #REQUIRED
		enabled CDATA #IMPLIED 
		extractionSource CDATA #REQUIRED
		extractionMethod CDATA #REQUIRED
		xpath CDATA #IMPLIED
		jsonpath CDATA #IMPLIED
		regexp CDATA #REQUIRED
		template CDATA #REQUIRED>
	
	<!ATTLIST dp-request-injector
		type CDATA #REQUIRED
		injectionMethod CDATA #IMPLIED
		parameterName CDATA #IMPLIED
		xpath CDATA #IMPLIED
		jsonpath CDATA #IMPLIED
		regexp CDATA #IMPLIED
		groups CDATA #IMPLIED>
	
	<!ATTLIST request-definition
		pushType CDATA #REQUIRED
		network CDATA #IMPLIED 
		plugin CDATA #IMPLIED 
		streamingType CDATA #IMPLIED 
		classname CDATA #IMPLIED
		pollingMaxDeltaT CDATA #IMPLIED
		pollingDefaultDelay CDATA #IMPLIED>
		
	<!ATTLIST result-handler 
		type CDATA #IMPLIED 
		messageSplitterRegexp CDATA #IMPLIED
		messageSplitterRegexpGroup CDATA #IMPLIED
		responseSource CDATA #IMPLIED
		endOfPacket CDATA #IMPLIED>
	
	<!ATTLIST timestamp-extractor 
		regExp CDATA #REQUIRED
		template CDATA #REQUIRED 
		setDefaultValue CDATA #REQUIRED 
		defaultValue CDATA #REQUIRED
		assertionOnNoMatch CDATA #IMPLIED
		extractType CDATA #IMPLIED
		matchNumber CDATA #IMPLIED
		name CDATA #IMPLIED
		uid CDATA #IMPLIED
		valueHtmlEncoded CDATA #IMPLIED>
	
	<!ATTLIST message-definition
		messageType CDATA #REQUIRED>
	
	<!ATTLIST name-extractor
		regExp CDATA #REQUIRED
		template CDATA #REQUIRED
		setDefaultValue CDATA #REQUIRED 
		defaultValue CDATA #IMPLIED
		assertionOnNoMatch CDATA #IMPLIED
		extractType CDATA #IMPLIED
		matchNumber CDATA #IMPLIED
		name CDATA #IMPLIED
		uid CDATA #IMPLIED
		valueEncoded CDATA #IMPLIED
		valueHtmlEncoded CDATA #IMPLIED
		valueUrlEncoded CDATA #IMPLIED>
	
	<!ATTLIST rule
		type CDATA #REQUIRED
		operator CDATA #REQUIRED
		value CDATA #IMPLIED
		from CDATA #IMPLIED 
		header CDATA #IMPLIED
		parametername CDATA #IMPLIED>
	
	<!ATTLIST conditions
		match-type CDATA #IMPLIED>
	
	<!ATTLIST condition
		operand1 CDATA #REQUIRED
		operator CDATA #REQUIRED
		operand2 CDATA #REQUIRED>
		 
	<!ATTLIST name
		template CDATA #REQUIRED>
		 		
	<!ATTLIST simplified-VU-class
		classname CDATA #REQUIRED>
]>
<framework isReadOnly="false" name="SAP IC" signature="c5yVYjmix5ZSHPVUB2Pmo0xrSpM=" state="SELECTED" uniqueID="1285837758524" version="4.1.2">
<dynamic-parameters>
<dynamic-parameter assertionOnNoMatch="true" defaultValue="&lt;NOT FOUND&gt;" extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="session_token" regexp="session_token=([^&amp;]*?)&quot;" setDefaultValue="true" template="$1$">
<dp-request-injector injectionMethod="WHOLE_VALUE" parameterName="session_token" type="PARAMETER_VALUE"/>
</dynamic-parameter>
<dynamic-parameter assertionOnNoMatch="true" defaultValue="&lt;NOT FOUND&gt;" extractionMethod="REGEXP_ONLY" extractionSource="HEADERS" name="pollingId" regexp="/sap\((.*?)\)" setDefaultValue="true" template="$1$">
<dp-request-injector injectionMethod="PART_OF_THE_VALUE" type="PARAMETER_VALUE"/>
<dp-request-injector type="PATH"/>
<dp-request-injector type="HEADERS"/>
</dynamic-parameter>
<dynamic-parameter assertionOnNoMatch="true" defaultValue="&lt;NOT FOUND&gt;" extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="wcf-secure-id" regexp="name=&quot;wcf-secure-id&quot; value=&quot;(.*?)&quot;" setDefaultValue="true" template="$1$">
<dp-request-injector injectionMethod="WHOLE_VALUE" parameterName="wcf-secure-id" type="PARAMETER_VALUE"/>
<dp-request-injector groups="1" injectionMethod="PART_OF_TEXT" regexp="(.*?)" type="TEXT_CONTENT"/>
</dynamic-parameter>
<dynamic-parameter assertionOnNoMatch="true" defaultValue="&lt;NOT FOUND&gt;" extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="callbackFlashIslands" regexp="&lt;input type=&quot;hidden&quot; name=&quot;callbackFlashIslands&quot; id=&quot;callbackFlashIslands&quot; value=&quot;/sap\((.*?)\)" setDefaultValue="true" template="$1$">
<dp-request-injector injectionMethod="PART_OF_THE_VALUE" type="PARAMETER_VALUE"/>
<dp-request-injector type="HEADERS"/>
<dp-request-injector groups="1" injectionMethod="PART_OF_TEXT" regexp="(.*?)" type="TEXT_CONTENT"/>
</dynamic-parameter>
<dynamic-parameter assertionOnNoMatch="true" defaultValue="&lt;NOT FOUND&gt;" extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="crm-icsessionsyncid" regexp="crm-icsessionsyncid=([^&amp;]*?) &amp;" setDefaultValue="true" template="$1$">
<dp-request-injector injectionMethod="WHOLE_VALUE" parameterName="crm-icsessionsyncid" type="PARAMETER_VALUE"/>
</dynamic-parameter>
<dynamic-parameter assertionOnNoMatch="true" defaultValue="&lt;NOT FOUND&gt;" extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="SapRole" regexp="'crmUIHostDialogContainerForm','(.*?)'" setDefaultValue="true" template="$1$">
<dp-request-injector injectionMethod="PART_OF_THE_VALUE" type="PARAMETER_VALUE"/>
<dp-request-injector groups="1" injectionMethod="PART_OF_TEXT" regexp="(.*?)" type="TEXT_CONTENT"/>
</dynamic-parameter>
<dynamic-parameter assertionOnNoMatch="true" defaultValue="&lt;NOT FOUND&gt;" extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="esid" regexp="^\(([a-zA-Z0-9]*?)=\)" setDefaultValue="true" template="$1$">
<dp-request-injector injectionMethod="PART_OF_THE_VALUE" parameterName="esid" type="PARAMETER_VALUE"/>
<dp-request-injector type="PATH"/>
</dynamic-parameter>
<dynamic-parameter assertionOnNoMatch="true" defaultValue="&lt;NOT FOUND&gt;" extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="sap-login-XSRF" regexp="&lt;input type=&quot;hidden&quot; name=&quot;sap-login-XSRF&quot; value=&quot;(.*?)&amp;" setDefaultValue="true" template="$1$">
<dp-request-injector injectionMethod="PART_OF_THE_VALUE" parameterName="sap-login-XSRF" type="PARAMETER_VALUE"/>
</dynamic-parameter>
<dynamic-parameter assertionOnNoMatch="true" defaultValue="&lt;NOT FOUND&gt;" extractionMethod="REGEXP_ONLY" extractionSource="BODY" name="session_access_token" regexp="session_access_token\\x3d(.*?)\\" setDefaultValue="true" template="$1$">
<dp-request-injector injectionMethod="PART_OF_THE_VALUE" type="PARAMETER_VALUE"/>
<dp-request-injector groups="1" injectionMethod="PART_OF_TEXT" regexp="(.*?)" type="TEXT_CONTENT"/>
</dynamic-parameter>
</dynamic-parameters>
<websocket enabled="false">
<request extractionMethod="REGEXP_ONLY" regexp="" template="$1$"/>
<response extractionMethod="REGEXP_ONLY" regexp="" template="$1$"/>
</websocket>
</framework>
